openapi: 3.0.0
info:
  title: todo_mvc_mongodb
  version: 1.0.0
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    undefinedAuth:
      type: http
tags:
  - name: client
    description: client APIs
  - name: client > Tickupdate
    description: Tickupdate Model APIs
  - name: client > File Upload
    description: Upload Files
  - name: client > Size
    description: Size Model APIs
  - name: client > pack
    description: pack Model APIs
  - name: client > Material
    description: Material Model APIs
  - name: client > ChemistryElement
    description: ChemistryElement Model APIs
  - name: client > entity
    description: entity Model APIs
  - name: client > EntityPart
    description: EntityPart Model APIs
  - name: client > EntityBody
    description: EntityBody Model APIs
  - name: client > lang
    description: lang Model APIs
  - name: client > Comment
    description: Comment Model APIs
  - name: client > Chat_group
    description: Chat_group Model APIs
  - name: client > Chat_message
    description: Chat_message Model APIs
  - name: client > Blog
    description: Blog Model APIs
  - name: client > blockstate
    description: blockstate Model APIs
  - name: client > item
    description: item Model APIs
  - name: client > user
    description: user Model APIs
  - name: client > login
    description: client Login
  - name: client > category
    description: category Model APIs
  - name: client > role
    description: role Model APIs
  - name: client > projectRoute
    description: projectRoute Model APIs
  - name: client > routeRole
    description: routeRole Model APIs
  - name: client > userRole
    description: userRole Model APIs
paths:
  /client/api/v1/tickupdate/{id}:
    get:
      tags:
        - client > Tickupdate
      summary: getTickupdate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae14
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-04T04:45:18.174Z'
                  updatedAt: '2025-12-10T00:00:11.511Z'
  /client/api/v1/tickupdate/create:
    post:
      tags:
        - client > Tickupdate
      summary: addTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae12
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-04T04:45:18.174Z'
                  updatedAt: '2025-12-10T00:00:11.511Z'
  /client/api/v1/tickupdate/list:
    post:
      tags:
        - client > Tickupdate
      summary: findAllTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - id: 6793de786404b3021093ae13
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-08-04T04:45:18.174Z'
                      updatedAt: '2025-12-10T00:00:11.511Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/tickupdate/count:
    post:
      tags:
        - client > Tickupdate
      summary: getTickupdateCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/tickupdate/addBulk:
    post:
      tags:
        - client > Tickupdate
      summary: insertBulkTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/tickupdate/deleteMany:
    post:
      tags:
        - client > Tickupdate
      summary: deleteManyTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/tickupdate/update/{id}:
    put:
      tags:
        - client > Tickupdate
      summary: updateTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae15
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-04T04:45:18.174Z'
                  updatedAt: '2025-12-10T00:00:11.511Z'
  /client/api/v1/tickupdate/partial-update/{id}:
    put:
      tags:
        - client > Tickupdate
      summary: partialupdateTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae16
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-04T04:45:18.174Z'
                  updatedAt: '2025-12-10T00:00:11.511Z'
  /client/api/v1/tickupdate/softDelete/{id}:
    put:
      tags:
        - client > Tickupdate
      summary: softDeleteTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/tickupdate/softDeleteMany:
    put:
      tags:
        - client > Tickupdate
      summary: softDeleteManyTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/tickupdate/updateBulk:
    put:
      tags:
        - client > Tickupdate
      summary: updateBulkTickupdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/tickupdate/delete/{id}:
    delete:
      tags:
        - client > Tickupdate
      summary: deleteTickupdate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/upload:
    post:
      tags:
        - client > File Upload
      summary: File upload in client
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /client/api/v1/size/{id}:
    get:
      tags:
        - client > Size
      summary: getSize
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae1c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-03T05:51:15.834Z'
                  updatedAt: '2025-04-16T03:05:49.285Z'
  /client/api/v1/size/create:
    post:
      tags:
        - client > Size
      summary: addSize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae1a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-03T05:51:15.834Z'
                  updatedAt: '2025-04-16T03:05:49.285Z'
  /client/api/v1/size/list:
    post:
      tags:
        - client > Size
      summary: findAllSize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - id: 6793de786404b3021093ae1b
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-10-03T05:51:15.834Z'
                      updatedAt: '2025-04-16T03:05:49.285Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/size/count:
    post:
      tags:
        - client > Size
      summary: getSizeCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/size/addBulk:
    post:
      tags:
        - client > Size
      summary: insertBulkSize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/size/deleteMany:
    post:
      tags:
        - client > Size
      summary: deleteManySize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/size/update/{id}:
    put:
      tags:
        - client > Size
      summary: updateSize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae1d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-03T05:51:15.834Z'
                  updatedAt: '2025-04-16T03:05:49.285Z'
  /client/api/v1/size/partial-update/{id}:
    put:
      tags:
        - client > Size
      summary: partialupdateSize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  id: 6793de786404b3021093ae1e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-03T05:51:15.834Z'
                  updatedAt: '2025-04-16T03:05:49.285Z'
  /client/api/v1/size/softDelete/{id}:
    put:
      tags:
        - client > Size
      summary: softDeleteSize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/size/softDeleteMany:
    put:
      tags:
        - client > Size
      summary: softDeleteManySize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/size/updateBulk:
    put:
      tags:
        - client > Size
      summary: updateBulkSize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/size/delete/{id}:
    delete:
      tags:
        - client > Size
      summary: deleteSize
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/pack/{id}:
    get:
      tags:
        - client > pack
      summary: getpack
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Homer Muller
                  image: Market
                  id: 6793de786404b3021093ae24
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-09T04:46:58.569Z'
                  updatedAt: '2025-05-07T05:16:41.721Z'
  /client/api/v1/pack/create:
    post:
      tags:
        - client > pack
      summary: addpack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Homer Muller
                image: Market
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Homer Muller
                  image: Market
                  id: 6793de786404b3021093ae22
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-09T04:46:58.569Z'
                  updatedAt: '2025-05-07T05:16:41.721Z'
  /client/api/v1/pack/list:
    post:
      tags:
        - client > pack
      summary: findAllpack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Homer Muller
                      image: Market
                      id: 6793de786404b3021093ae23
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-07-09T04:46:58.569Z'
                      updatedAt: '2025-05-07T05:16:41.721Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/pack/count:
    post:
      tags:
        - client > pack
      summary: getpackCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/pack/addBulk:
    post:
      tags:
        - client > pack
      summary: insertBulkpack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Homer Muller
                    image: Market
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/pack/deleteMany:
    post:
      tags:
        - client > pack
      summary: deleteManypack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/pack/update/{id}:
    put:
      tags:
        - client > pack
      summary: updatepack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Homer Muller
                image: Market
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Homer Muller
                  image: Market
                  id: 6793de786404b3021093ae25
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-09T04:46:58.569Z'
                  updatedAt: '2025-05-07T05:16:41.721Z'
  /client/api/v1/pack/partial-update/{id}:
    put:
      tags:
        - client > pack
      summary: partialupdatepack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Homer Muller
                  image: Market
                  id: 6793de786404b3021093ae26
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-09T04:46:58.569Z'
                  updatedAt: '2025-05-07T05:16:41.721Z'
  /client/api/v1/pack/softDelete/{id}:
    put:
      tags:
        - client > pack
      summary: softDeletepack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/pack/softDeleteMany:
    put:
      tags:
        - client > pack
      summary: softDeleteManypack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/pack/updateBulk:
    put:
      tags:
        - client > pack
      summary: updateBulkpack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/pack/delete/{id}:
    delete:
      tags:
        - client > pack
      summary: deletepack
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/material/{id}:
    get:
      tags:
        - client > Material
      summary: getMaterial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allen Parker DDS
                  symbol: reinvent
                  elementId: Reactive
                  type: overriding
                  baseColors: cyan
                  density: one-to-one
                  meltingPoint: Hat
                  boilingPoint: Squares
                  standardState: Upgradable
                  maxTemperature: zero
                  minTemperature: tan
                  spectrum: orchestration
                  condition: optical
                  parameters: Zimbabwe
                  description: Ranch
                  verified: Consultant
                  id: 6793de786404b3021093ae2c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-05T06:28:27.965Z'
                  updatedAt: '2025-03-30T01:54:07.224Z'
  /client/api/v1/material/create:
    post:
      tags:
        - client > Material
      summary: addMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Allen Parker DDS
                symbol: reinvent
                elementId: Reactive
                type: overriding
                baseColors: cyan
                density: one-to-one
                meltingPoint: Hat
                boilingPoint: Squares
                standardState: Upgradable
                maxTemperature: zero
                minTemperature: tan
                spectrum: orchestration
                condition: optical
                parameters: Zimbabwe
                description: Ranch
                verified: Consultant
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allen Parker DDS
                  symbol: reinvent
                  elementId: Reactive
                  type: overriding
                  baseColors: cyan
                  density: one-to-one
                  meltingPoint: Hat
                  boilingPoint: Squares
                  standardState: Upgradable
                  maxTemperature: zero
                  minTemperature: tan
                  spectrum: orchestration
                  condition: optical
                  parameters: Zimbabwe
                  description: Ranch
                  verified: Consultant
                  id: 6793de786404b3021093ae2a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-05T06:28:27.965Z'
                  updatedAt: '2025-03-30T01:54:07.224Z'
  /client/api/v1/material/list:
    post:
      tags:
        - client > Material
      summary: findAllMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Allen Parker DDS
                      symbol: reinvent
                      elementId: Reactive
                      type: overriding
                      baseColors: cyan
                      density: one-to-one
                      meltingPoint: Hat
                      boilingPoint: Squares
                      standardState: Upgradable
                      maxTemperature: zero
                      minTemperature: tan
                      spectrum: orchestration
                      condition: optical
                      parameters: Zimbabwe
                      description: Ranch
                      verified: Consultant
                      id: 6793de786404b3021093ae2b
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-05T06:28:27.965Z'
                      updatedAt: '2025-03-30T01:54:07.224Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/material/count:
    post:
      tags:
        - client > Material
      summary: getMaterialCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/material/addBulk:
    post:
      tags:
        - client > Material
      summary: insertBulkMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Allen Parker DDS
                    symbol: reinvent
                    elementId: Reactive
                    type: overriding
                    baseColors: cyan
                    density: one-to-one
                    meltingPoint: Hat
                    boilingPoint: Squares
                    standardState: Upgradable
                    maxTemperature: zero
                    minTemperature: tan
                    spectrum: orchestration
                    condition: optical
                    parameters: Zimbabwe
                    description: Ranch
                    verified: Consultant
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/deleteMany:
    post:
      tags:
        - client > Material
      summary: deleteManyMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/update/{id}:
    put:
      tags:
        - client > Material
      summary: updateMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Allen Parker DDS
                symbol: reinvent
                elementId: Reactive
                type: overriding
                baseColors: cyan
                density: one-to-one
                meltingPoint: Hat
                boilingPoint: Squares
                standardState: Upgradable
                maxTemperature: zero
                minTemperature: tan
                spectrum: orchestration
                condition: optical
                parameters: Zimbabwe
                description: Ranch
                verified: Consultant
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allen Parker DDS
                  symbol: reinvent
                  elementId: Reactive
                  type: overriding
                  baseColors: cyan
                  density: one-to-one
                  meltingPoint: Hat
                  boilingPoint: Squares
                  standardState: Upgradable
                  maxTemperature: zero
                  minTemperature: tan
                  spectrum: orchestration
                  condition: optical
                  parameters: Zimbabwe
                  description: Ranch
                  verified: Consultant
                  id: 6793de786404b3021093ae2d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-05T06:28:27.965Z'
                  updatedAt: '2025-03-30T01:54:07.224Z'
  /client/api/v1/material/partial-update/{id}:
    put:
      tags:
        - client > Material
      summary: partialupdateMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allen Parker DDS
                  symbol: reinvent
                  elementId: Reactive
                  type: overriding
                  baseColors: cyan
                  density: one-to-one
                  meltingPoint: Hat
                  boilingPoint: Squares
                  standardState: Upgradable
                  maxTemperature: zero
                  minTemperature: tan
                  spectrum: orchestration
                  condition: optical
                  parameters: Zimbabwe
                  description: Ranch
                  verified: Consultant
                  id: 6793de786404b3021093ae2e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-05T06:28:27.965Z'
                  updatedAt: '2025-03-30T01:54:07.224Z'
  /client/api/v1/material/softDelete/{id}:
    put:
      tags:
        - client > Material
      summary: softDeleteMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/softDeleteMany:
    put:
      tags:
        - client > Material
      summary: softDeleteManyMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/updateBulk:
    put:
      tags:
        - client > Material
      summary: updateBulkMaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/delete/{id}:
    delete:
      tags:
        - client > Material
      summary: deleteMaterial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/chemistryelement/{id}:
    get:
      tags:
        - client > ChemistryElement
      summary: getChemistryElement
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  atomicNumber: 577
                  symbol: coherent
                  name: Jacob Murazik PhD
                  atomicMass: program
                  cpkHexColor: services
                  electronConfiguration: partnerships
                  electronegativity: Tunnel
                  atomicRadius: Kiribati
                  ionizationEnergy: Automotive
                  electronAffinity: Branding
                  oxidationStates: Avon
                  standardState: connecting
                  meltingPoint: overriding
                  boilingPoint: Intelligent
                  density: Innovative
                  groupBlock: intranet
                  yearDiscovered: navigating
                  image: parse
                  id: 6793de786404b3021093ae34
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-30T15:14:13.547Z'
  /client/api/v1/chemistryelement/create:
    post:
      tags:
        - client > ChemistryElement
      summary: addChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                atomicNumber: 577
                symbol: coherent
                name: Jacob Murazik PhD
                atomicMass: program
                cpkHexColor: services
                electronConfiguration: partnerships
                electronegativity: Tunnel
                atomicRadius: Kiribati
                ionizationEnergy: Automotive
                electronAffinity: Branding
                oxidationStates: Avon
                standardState: connecting
                meltingPoint: overriding
                boilingPoint: Intelligent
                density: Innovative
                groupBlock: intranet
                yearDiscovered: navigating
                image: parse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  atomicNumber: 577
                  symbol: coherent
                  name: Jacob Murazik PhD
                  atomicMass: program
                  cpkHexColor: services
                  electronConfiguration: partnerships
                  electronegativity: Tunnel
                  atomicRadius: Kiribati
                  ionizationEnergy: Automotive
                  electronAffinity: Branding
                  oxidationStates: Avon
                  standardState: connecting
                  meltingPoint: overriding
                  boilingPoint: Intelligent
                  density: Innovative
                  groupBlock: intranet
                  yearDiscovered: navigating
                  image: parse
                  id: 6793de786404b3021093ae32
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-30T15:14:13.547Z'
  /client/api/v1/chemistryelement/list:
    post:
      tags:
        - client > ChemistryElement
      summary: findAllChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - atomicNumber: 577
                      symbol: coherent
                      name: Jacob Murazik PhD
                      atomicMass: program
                      cpkHexColor: services
                      electronConfiguration: partnerships
                      electronegativity: Tunnel
                      atomicRadius: Kiribati
                      ionizationEnergy: Automotive
                      electronAffinity: Branding
                      oxidationStates: Avon
                      standardState: connecting
                      meltingPoint: overriding
                      boilingPoint: Intelligent
                      density: Innovative
                      groupBlock: intranet
                      yearDiscovered: navigating
                      image: parse
                      id: 6793de786404b3021093ae33
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-10-30T15:14:13.547Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/chemistryelement/count:
    post:
      tags:
        - client > ChemistryElement
      summary: getChemistryElementCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/chemistryelement/addBulk:
    post:
      tags:
        - client > ChemistryElement
      summary: insertBulkChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - atomicNumber: 577
                    symbol: coherent
                    name: Jacob Murazik PhD
                    atomicMass: program
                    cpkHexColor: services
                    electronConfiguration: partnerships
                    electronegativity: Tunnel
                    atomicRadius: Kiribati
                    ionizationEnergy: Automotive
                    electronAffinity: Branding
                    oxidationStates: Avon
                    standardState: connecting
                    meltingPoint: overriding
                    boilingPoint: Intelligent
                    density: Innovative
                    groupBlock: intranet
                    yearDiscovered: navigating
                    image: parse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chemistryelement/deleteMany:
    post:
      tags:
        - client > ChemistryElement
      summary: deleteManyChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chemistryelement/update/{id}:
    put:
      tags:
        - client > ChemistryElement
      summary: updateChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                atomicNumber: 577
                symbol: coherent
                name: Jacob Murazik PhD
                atomicMass: program
                cpkHexColor: services
                electronConfiguration: partnerships
                electronegativity: Tunnel
                atomicRadius: Kiribati
                ionizationEnergy: Automotive
                electronAffinity: Branding
                oxidationStates: Avon
                standardState: connecting
                meltingPoint: overriding
                boilingPoint: Intelligent
                density: Innovative
                groupBlock: intranet
                yearDiscovered: navigating
                image: parse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  atomicNumber: 577
                  symbol: coherent
                  name: Jacob Murazik PhD
                  atomicMass: program
                  cpkHexColor: services
                  electronConfiguration: partnerships
                  electronegativity: Tunnel
                  atomicRadius: Kiribati
                  ionizationEnergy: Automotive
                  electronAffinity: Branding
                  oxidationStates: Avon
                  standardState: connecting
                  meltingPoint: overriding
                  boilingPoint: Intelligent
                  density: Innovative
                  groupBlock: intranet
                  yearDiscovered: navigating
                  image: parse
                  id: 6793de786404b3021093ae35
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-30T15:14:13.547Z'
  /client/api/v1/chemistryelement/partial-update/{id}:
    put:
      tags:
        - client > ChemistryElement
      summary: partialupdateChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  atomicNumber: 577
                  symbol: coherent
                  name: Jacob Murazik PhD
                  atomicMass: program
                  cpkHexColor: services
                  electronConfiguration: partnerships
                  electronegativity: Tunnel
                  atomicRadius: Kiribati
                  ionizationEnergy: Automotive
                  electronAffinity: Branding
                  oxidationStates: Avon
                  standardState: connecting
                  meltingPoint: overriding
                  boilingPoint: Intelligent
                  density: Innovative
                  groupBlock: intranet
                  yearDiscovered: navigating
                  image: parse
                  id: 6793de786404b3021093ae36
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-30T15:14:13.547Z'
  /client/api/v1/chemistryelement/softDelete/{id}:
    put:
      tags:
        - client > ChemistryElement
      summary: softDeleteChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chemistryelement/softDeleteMany:
    put:
      tags:
        - client > ChemistryElement
      summary: softDeleteManyChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chemistryelement/updateBulk:
    put:
      tags:
        - client > ChemistryElement
      summary: updateBulkChemistryElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chemistryelement/delete/{id}:
    delete:
      tags:
        - client > ChemistryElement
      summary: deleteChemistryElement
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/entity/{id}:
    get:
      tags:
        - client > entity
      summary: getentity
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Doyle Stroman III
                  image: Metal
                  id: 6793de786404b3021093ae3c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-16T12:56:33.134Z'
                  updatedAt: '2025-08-18T03:33:49.687Z'
  /client/api/v1/entity/create:
    post:
      tags:
        - client > entity
      summary: addentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Doyle Stroman III
                image: Metal
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Doyle Stroman III
                  image: Metal
                  id: 6793de786404b3021093ae3a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-16T12:56:33.134Z'
                  updatedAt: '2025-08-18T03:33:49.687Z'
  /client/api/v1/entity/list:
    post:
      tags:
        - client > entity
      summary: findAllentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Doyle Stroman III
                      image: Metal
                      id: 6793de786404b3021093ae3b
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-07-16T12:56:33.134Z'
                      updatedAt: '2025-08-18T03:33:49.687Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/entity/count:
    post:
      tags:
        - client > entity
      summary: getentityCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/entity/addBulk:
    post:
      tags:
        - client > entity
      summary: insertBulkentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Doyle Stroman III
                    image: Metal
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entity/deleteMany:
    post:
      tags:
        - client > entity
      summary: deleteManyentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entity/update/{id}:
    put:
      tags:
        - client > entity
      summary: updateentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Doyle Stroman III
                image: Metal
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Doyle Stroman III
                  image: Metal
                  id: 6793de786404b3021093ae3d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-16T12:56:33.134Z'
                  updatedAt: '2025-08-18T03:33:49.687Z'
  /client/api/v1/entity/partial-update/{id}:
    put:
      tags:
        - client > entity
      summary: partialupdateentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Doyle Stroman III
                  image: Metal
                  id: 6793de786404b3021093ae3e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-16T12:56:33.134Z'
                  updatedAt: '2025-08-18T03:33:49.687Z'
  /client/api/v1/entity/softDelete/{id}:
    put:
      tags:
        - client > entity
      summary: softDeleteentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entity/softDeleteMany:
    put:
      tags:
        - client > entity
      summary: softDeleteManyentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entity/updateBulk:
    put:
      tags:
        - client > entity
      summary: updateBulkentity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entity/delete/{id}:
    delete:
      tags:
        - client > entity
      summary: deleteentity
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/entitypart/{id}:
    get:
      tags:
        - client > EntityPart
      summary: getEntityPart
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Laurence Lebsack
                  image: convergence
                  id: 6793de786404b3021093ae44
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-15T19:58:59.572Z'
                  updatedAt: '2025-12-17T13:24:15.962Z'
  /client/api/v1/entitypart/create:
    post:
      tags:
        - client > EntityPart
      summary: addEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Laurence Lebsack
                image: convergence
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Laurence Lebsack
                  image: convergence
                  id: 6793de786404b3021093ae42
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-15T19:58:59.572Z'
                  updatedAt: '2025-12-17T13:24:15.962Z'
  /client/api/v1/entitypart/list:
    post:
      tags:
        - client > EntityPart
      summary: findAllEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Laurence Lebsack
                      image: convergence
                      id: 6793de786404b3021093ae43
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-09-15T19:58:59.572Z'
                      updatedAt: '2025-12-17T13:24:15.962Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/entitypart/count:
    post:
      tags:
        - client > EntityPart
      summary: getEntityPartCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/entitypart/addBulk:
    post:
      tags:
        - client > EntityPart
      summary: insertBulkEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Laurence Lebsack
                    image: convergence
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitypart/deleteMany:
    post:
      tags:
        - client > EntityPart
      summary: deleteManyEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitypart/update/{id}:
    put:
      tags:
        - client > EntityPart
      summary: updateEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Laurence Lebsack
                image: convergence
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Laurence Lebsack
                  image: convergence
                  id: 6793de786404b3021093ae45
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-15T19:58:59.572Z'
                  updatedAt: '2025-12-17T13:24:15.962Z'
  /client/api/v1/entitypart/partial-update/{id}:
    put:
      tags:
        - client > EntityPart
      summary: partialupdateEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Laurence Lebsack
                  image: convergence
                  id: 6793de786404b3021093ae46
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-15T19:58:59.572Z'
                  updatedAt: '2025-12-17T13:24:15.962Z'
  /client/api/v1/entitypart/softDelete/{id}:
    put:
      tags:
        - client > EntityPart
      summary: softDeleteEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitypart/softDeleteMany:
    put:
      tags:
        - client > EntityPart
      summary: softDeleteManyEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitypart/updateBulk:
    put:
      tags:
        - client > EntityPart
      summary: updateBulkEntityPart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitypart/delete/{id}:
    delete:
      tags:
        - client > EntityPart
      summary: deleteEntityPart
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/entitybody/{id}:
    get:
      tags:
        - client > EntityBody
      summary: getEntityBody
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allan Denesik
                  image: Central
                  id: 6793de786404b3021093ae4c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T12:09:47.629Z'
                  updatedAt: '2025-04-29T09:03:16.382Z'
  /client/api/v1/entitybody/create:
    post:
      tags:
        - client > EntityBody
      summary: addEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Allan Denesik
                image: Central
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allan Denesik
                  image: Central
                  id: 6793de786404b3021093ae4a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T12:09:47.629Z'
                  updatedAt: '2025-04-29T09:03:16.382Z'
  /client/api/v1/entitybody/list:
    post:
      tags:
        - client > EntityBody
      summary: findAllEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Allan Denesik
                      image: Central
                      id: 6793de786404b3021093ae4b
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-11-09T12:09:47.629Z'
                      updatedAt: '2025-04-29T09:03:16.382Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/entitybody/count:
    post:
      tags:
        - client > EntityBody
      summary: getEntityBodyCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/entitybody/addBulk:
    post:
      tags:
        - client > EntityBody
      summary: insertBulkEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Allan Denesik
                    image: Central
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitybody/deleteMany:
    post:
      tags:
        - client > EntityBody
      summary: deleteManyEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitybody/update/{id}:
    put:
      tags:
        - client > EntityBody
      summary: updateEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Allan Denesik
                image: Central
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allan Denesik
                  image: Central
                  id: 6793de786404b3021093ae4d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T12:09:47.629Z'
                  updatedAt: '2025-04-29T09:03:16.382Z'
  /client/api/v1/entitybody/partial-update/{id}:
    put:
      tags:
        - client > EntityBody
      summary: partialupdateEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Allan Denesik
                  image: Central
                  id: 6793de786404b3021093ae4e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T12:09:47.629Z'
                  updatedAt: '2025-04-29T09:03:16.382Z'
  /client/api/v1/entitybody/softDelete/{id}:
    put:
      tags:
        - client > EntityBody
      summary: softDeleteEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitybody/softDeleteMany:
    put:
      tags:
        - client > EntityBody
      summary: softDeleteManyEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitybody/updateBulk:
    put:
      tags:
        - client > EntityBody
      summary: updateBulkEntityBody
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/entitybody/delete/{id}:
    delete:
      tags:
        - client > EntityBody
      summary: deleteEntityBody
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/lang/{id}:
    get:
      tags:
        - client > lang
      summary: getlang
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  lang:
                    - _id: false
                      lang: Clothing
                      translate: vertical
                  name: Tyrone Fay
                  image: Course
                  id: 6793de786404b3021093ae54
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-19T23:25:37.367Z'
                  updatedAt: '2025-09-30T08:14:11.571Z'
  /client/api/v1/lang/create:
    post:
      tags:
        - client > lang
      summary: addlang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lang:
                  - _id: false
                    lang: Clothing
                    translate: vertical
                name: Tyrone Fay
                image: Course
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  lang:
                    - _id: false
                      lang: Clothing
                      translate: vertical
                  name: Tyrone Fay
                  image: Course
                  id: 6793de786404b3021093ae52
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-19T23:25:37.367Z'
                  updatedAt: '2025-09-30T08:14:11.571Z'
  /client/api/v1/lang/list:
    post:
      tags:
        - client > lang
      summary: findAlllang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - lang:
                        - _id: false
                          lang: Clothing
                          translate: vertical
                      name: Tyrone Fay
                      image: Course
                      id: 6793de786404b3021093ae53
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-08-19T23:25:37.367Z'
                      updatedAt: '2025-09-30T08:14:11.571Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/lang/count:
    post:
      tags:
        - client > lang
      summary: getlangCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/lang/addBulk:
    post:
      tags:
        - client > lang
      summary: insertBulklang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - lang:
                      - _id: false
                        lang: Clothing
                        translate: vertical
                    name: Tyrone Fay
                    image: Course
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/lang/deleteMany:
    post:
      tags:
        - client > lang
      summary: deleteManylang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/lang/update/{id}:
    put:
      tags:
        - client > lang
      summary: updatelang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lang:
                  - _id: false
                    lang: Clothing
                    translate: vertical
                name: Tyrone Fay
                image: Course
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  lang:
                    - _id: false
                      lang: Clothing
                      translate: vertical
                  name: Tyrone Fay
                  image: Course
                  id: 6793de786404b3021093ae55
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-19T23:25:37.367Z'
                  updatedAt: '2025-09-30T08:14:11.571Z'
  /client/api/v1/lang/partial-update/{id}:
    put:
      tags:
        - client > lang
      summary: partialupdatelang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  lang:
                    - _id: false
                      lang: Clothing
                      translate: vertical
                  name: Tyrone Fay
                  image: Course
                  id: 6793de786404b3021093ae56
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-08-19T23:25:37.367Z'
                  updatedAt: '2025-09-30T08:14:11.571Z'
  /client/api/v1/lang/softDelete/{id}:
    put:
      tags:
        - client > lang
      summary: softDeletelang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/lang/softDeleteMany:
    put:
      tags:
        - client > lang
      summary: softDeleteManylang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/lang/updateBulk:
    put:
      tags:
        - client > lang
      summary: updateBulklang
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/lang/delete/{id}:
    delete:
      tags:
        - client > lang
      summary: deletelang
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/comment/{id}:
    get:
      tags:
        - client > Comment
      summary: getComment
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  comment: Global
                  upvoteCount: 734
                  downVoteCount: 304
                  commentTime: '2025-05-29T08:04:06.609Z'
                  parentItem: 6793de786404b3021093ae59
                  image: invoice
                  name: Ms. Dennis Parker
                  id: 6793de786404b3021093ae5d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T04:06:45.211Z'
                  updatedAt: '2025-04-15T00:10:14.333Z'
  /client/api/v1/comment/create:
    post:
      tags:
        - client > Comment
      summary: addComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment: Global
                upvoteCount: 734
                downVoteCount: 304
                commentTime: '2025-05-29T08:04:06.609Z'
                parentItem: 6793de786404b3021093ae59
                image: invoice
                name: Ms. Dennis Parker
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  comment: Global
                  upvoteCount: 734
                  downVoteCount: 304
                  commentTime: '2025-05-29T08:04:06.609Z'
                  parentItem: 6793de786404b3021093ae59
                  image: invoice
                  name: Ms. Dennis Parker
                  id: 6793de786404b3021093ae5b
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T04:06:45.211Z'
                  updatedAt: '2025-04-15T00:10:14.333Z'
  /client/api/v1/comment/list:
    post:
      tags:
        - client > Comment
      summary: findAllComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - comment: Global
                      upvoteCount: 734
                      downVoteCount: 304
                      commentTime: '2025-05-29T08:04:06.609Z'
                      parentItem: 6793de786404b3021093ae59
                      image: invoice
                      name: Ms. Dennis Parker
                      id: 6793de786404b3021093ae5c
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-11-09T04:06:45.211Z'
                      updatedAt: '2025-04-15T00:10:14.333Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/comment/count:
    post:
      tags:
        - client > Comment
      summary: getCommentCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/comment/addBulk:
    post:
      tags:
        - client > Comment
      summary: insertBulkComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - comment: Global
                    upvoteCount: 734
                    downVoteCount: 304
                    commentTime: '2025-05-29T08:04:06.609Z'
                    parentItem: 6793de786404b3021093ae59
                    image: invoice
                    name: Ms. Dennis Parker
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/comment/deleteMany:
    post:
      tags:
        - client > Comment
      summary: deleteManyComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/comment/update/{id}:
    put:
      tags:
        - client > Comment
      summary: updateComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment: Global
                upvoteCount: 734
                downVoteCount: 304
                commentTime: '2025-05-29T08:04:06.609Z'
                parentItem: 6793de786404b3021093ae59
                image: invoice
                name: Ms. Dennis Parker
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  comment: Global
                  upvoteCount: 734
                  downVoteCount: 304
                  commentTime: '2025-05-29T08:04:06.609Z'
                  parentItem: 6793de786404b3021093ae59
                  image: invoice
                  name: Ms. Dennis Parker
                  id: 6793de786404b3021093ae5e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T04:06:45.211Z'
                  updatedAt: '2025-04-15T00:10:14.333Z'
  /client/api/v1/comment/partial-update/{id}:
    put:
      tags:
        - client > Comment
      summary: partialupdateComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  comment: Global
                  upvoteCount: 734
                  downVoteCount: 304
                  commentTime: '2025-05-29T08:04:06.609Z'
                  parentItem: 6793de786404b3021093ae59
                  image: invoice
                  name: Ms. Dennis Parker
                  id: 6793de786404b3021093ae5f
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-11-09T04:06:45.211Z'
                  updatedAt: '2025-04-15T00:10:14.333Z'
  /client/api/v1/comment/softDelete/{id}:
    put:
      tags:
        - client > Comment
      summary: softDeleteComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/comment/softDeleteMany:
    put:
      tags:
        - client > Comment
      summary: softDeleteManyComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/comment/updateBulk:
    put:
      tags:
        - client > Comment
      summary: updateBulkComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/comment/delete/{id}:
    delete:
      tags:
        - client > Comment
      summary: deleteComment
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/chat_group/{id}:
    get:
      tags:
        - client > Chat_group
      summary: getChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Harriet Koch
                  code: deposit
                  admin: Loan
                  image: area
                  id: 6793de786404b3021093ae65
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-07T21:59:12.115Z'
                  updatedAt: '2025-03-06T11:44:28.365Z'
  /client/api/v1/chat_group/create:
    post:
      tags:
        - client > Chat_group
      summary: addChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Harriet Koch
                code: deposit
                admin: Loan
                image: area
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Harriet Koch
                  code: deposit
                  admin: Loan
                  image: area
                  id: 6793de786404b3021093ae63
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-07T21:59:12.115Z'
                  updatedAt: '2025-03-06T11:44:28.365Z'
  /client/api/v1/chat_group/list:
    post:
      tags:
        - client > Chat_group
      summary: findAllChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Harriet Koch
                      code: deposit
                      admin: Loan
                      image: area
                      id: 6793de786404b3021093ae64
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-04-07T21:59:12.115Z'
                      updatedAt: '2025-03-06T11:44:28.365Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/chat_group/count:
    post:
      tags:
        - client > Chat_group
      summary: getChat_groupCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/chat_group/addBulk:
    post:
      tags:
        - client > Chat_group
      summary: insertBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Harriet Koch
                    code: deposit
                    admin: Loan
                    image: area
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/deleteMany:
    post:
      tags:
        - client > Chat_group
      summary: deleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/update/{id}:
    put:
      tags:
        - client > Chat_group
      summary: updateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Harriet Koch
                code: deposit
                admin: Loan
                image: area
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Harriet Koch
                  code: deposit
                  admin: Loan
                  image: area
                  id: 6793de786404b3021093ae66
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-07T21:59:12.115Z'
                  updatedAt: '2025-03-06T11:44:28.365Z'
  /client/api/v1/chat_group/partial-update/{id}:
    put:
      tags:
        - client > Chat_group
      summary: partialupdateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Harriet Koch
                  code: deposit
                  admin: Loan
                  image: area
                  id: 6793de786404b3021093ae67
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-07T21:59:12.115Z'
                  updatedAt: '2025-03-06T11:44:28.365Z'
  /client/api/v1/chat_group/softDelete/{id}:
    put:
      tags:
        - client > Chat_group
      summary: softDeleteChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/softDeleteMany:
    put:
      tags:
        - client > Chat_group
      summary: softDeleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/updateBulk:
    put:
      tags:
        - client > Chat_group
      summary: updateBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/delete/{id}:
    delete:
      tags:
        - client > Chat_group
      summary: deleteChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/chat_message/{id}:
    get:
      tags:
        - client > Chat_message
      summary: getChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: e-business
                  sender: Nigeria
                  recipient: AI
                  groupId: 6793de786404b3021093ae6a
                  image: teal
                  name: Shannon Kihn
                  id: 6793de786404b3021093ae6e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-26T00:26:39.781Z'
                  updatedAt: '2025-02-12T05:59:58.842Z'
  /client/api/v1/chat_message/create:
    post:
      tags:
        - client > Chat_message
      summary: addChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: e-business
                sender: Nigeria
                recipient: AI
                groupId: 6793de786404b3021093ae6a
                image: teal
                name: Shannon Kihn
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: e-business
                  sender: Nigeria
                  recipient: AI
                  groupId: 6793de786404b3021093ae6a
                  image: teal
                  name: Shannon Kihn
                  id: 6793de786404b3021093ae6c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-26T00:26:39.781Z'
                  updatedAt: '2025-02-12T05:59:58.842Z'
  /client/api/v1/chat_message/list:
    post:
      tags:
        - client > Chat_message
      summary: findAllChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - message: e-business
                      sender: Nigeria
                      recipient: AI
                      groupId: 6793de786404b3021093ae6a
                      image: teal
                      name: Shannon Kihn
                      id: 6793de786404b3021093ae6d
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-10-26T00:26:39.781Z'
                      updatedAt: '2025-02-12T05:59:58.842Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/chat_message/count:
    post:
      tags:
        - client > Chat_message
      summary: getChat_messageCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/chat_message/addBulk:
    post:
      tags:
        - client > Chat_message
      summary: insertBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - message: e-business
                    sender: Nigeria
                    recipient: AI
                    groupId: 6793de786404b3021093ae6a
                    image: teal
                    name: Shannon Kihn
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/deleteMany:
    post:
      tags:
        - client > Chat_message
      summary: deleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/update/{id}:
    put:
      tags:
        - client > Chat_message
      summary: updateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: e-business
                sender: Nigeria
                recipient: AI
                groupId: 6793de786404b3021093ae6a
                image: teal
                name: Shannon Kihn
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: e-business
                  sender: Nigeria
                  recipient: AI
                  groupId: 6793de786404b3021093ae6a
                  image: teal
                  name: Shannon Kihn
                  id: 6793de786404b3021093ae6f
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-26T00:26:39.781Z'
                  updatedAt: '2025-02-12T05:59:58.842Z'
  /client/api/v1/chat_message/partial-update/{id}:
    put:
      tags:
        - client > Chat_message
      summary: partialupdateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: e-business
                  sender: Nigeria
                  recipient: AI
                  groupId: 6793de786404b3021093ae6a
                  image: teal
                  name: Shannon Kihn
                  id: 6793de786404b3021093ae70
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-10-26T00:26:39.781Z'
                  updatedAt: '2025-02-12T05:59:58.842Z'
  /client/api/v1/chat_message/softDelete/{id}:
    put:
      tags:
        - client > Chat_message
      summary: softDeleteChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/softDeleteMany:
    put:
      tags:
        - client > Chat_message
      summary: softDeleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/updateBulk:
    put:
      tags:
        - client > Chat_message
      summary: updateBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/delete/{id}:
    delete:
      tags:
        - client > Chat_message
      summary: deleteChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/blog/{id}:
    get:
      tags:
        - client > Blog
      summary: getBlog
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Claire Greenholt
                  image: capability
                  title: Pennsylvania
                  alternativeHeadline: Data
                  publishDate: migration
                  author:
                    name: Claude Mohr
                    image: Concrete
                    email: Tia_Collins@hotmail.com
                  publisher:
                    name: Lester Hodkiewicz
                    url: Sudanese
                    logo: pixel
                  articleSection: Hawaii
                  articleBody: Dominican
                  description: Representative
                  slug: Mouse
                  url: Romania
                  isDraft: false
                  id: 6793de786404b3021093ae76
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-03T05:33:57.951Z'
                  updatedAt: '2025-09-07T12:03:12.378Z'
  /client/api/v1/blog/create:
    post:
      tags:
        - client > Blog
      summary: addBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Claire Greenholt
                image: capability
                title: Pennsylvania
                alternativeHeadline: Data
                publishDate: migration
                author:
                  name: Claude Mohr
                  image: Concrete
                  email: Tia_Collins@hotmail.com
                publisher:
                  name: Lester Hodkiewicz
                  url: Sudanese
                  logo: pixel
                articleSection: Hawaii
                articleBody: Dominican
                description: Representative
                slug: Mouse
                url: Romania
                isDraft: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Claire Greenholt
                  image: capability
                  title: Pennsylvania
                  alternativeHeadline: Data
                  publishDate: migration
                  author:
                    name: Claude Mohr
                    image: Concrete
                    email: Tia_Collins@hotmail.com
                  publisher:
                    name: Lester Hodkiewicz
                    url: Sudanese
                    logo: pixel
                  articleSection: Hawaii
                  articleBody: Dominican
                  description: Representative
                  slug: Mouse
                  url: Romania
                  isDraft: false
                  id: 6793de786404b3021093ae74
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-03T05:33:57.951Z'
                  updatedAt: '2025-09-07T12:03:12.378Z'
  /client/api/v1/blog/list:
    post:
      tags:
        - client > Blog
      summary: findAllBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Claire Greenholt
                      image: capability
                      title: Pennsylvania
                      alternativeHeadline: Data
                      publishDate: migration
                      author:
                        name: Claude Mohr
                        image: Concrete
                        email: Tia_Collins@hotmail.com
                      publisher:
                        name: Lester Hodkiewicz
                        url: Sudanese
                        logo: pixel
                      articleSection: Hawaii
                      articleBody: Dominican
                      description: Representative
                      slug: Mouse
                      url: Romania
                      isDraft: false
                      id: 6793de786404b3021093ae75
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-03T05:33:57.951Z'
                      updatedAt: '2025-09-07T12:03:12.378Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/blog/count:
    post:
      tags:
        - client > Blog
      summary: getBlogCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/blog/addBulk:
    post:
      tags:
        - client > Blog
      summary: insertBulkBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Claire Greenholt
                    image: capability
                    title: Pennsylvania
                    alternativeHeadline: Data
                    publishDate: migration
                    author:
                      name: Claude Mohr
                      image: Concrete
                      email: Tia_Collins@hotmail.com
                    publisher:
                      name: Lester Hodkiewicz
                      url: Sudanese
                      logo: pixel
                    articleSection: Hawaii
                    articleBody: Dominican
                    description: Representative
                    slug: Mouse
                    url: Romania
                    isDraft: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blog/deleteMany:
    post:
      tags:
        - client > Blog
      summary: deleteManyBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blog/update/{id}:
    put:
      tags:
        - client > Blog
      summary: updateBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Claire Greenholt
                image: capability
                title: Pennsylvania
                alternativeHeadline: Data
                publishDate: migration
                author:
                  name: Claude Mohr
                  image: Concrete
                  email: Tia_Collins@hotmail.com
                publisher:
                  name: Lester Hodkiewicz
                  url: Sudanese
                  logo: pixel
                articleSection: Hawaii
                articleBody: Dominican
                description: Representative
                slug: Mouse
                url: Romania
                isDraft: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Claire Greenholt
                  image: capability
                  title: Pennsylvania
                  alternativeHeadline: Data
                  publishDate: migration
                  author:
                    name: Claude Mohr
                    image: Concrete
                    email: Tia_Collins@hotmail.com
                  publisher:
                    name: Lester Hodkiewicz
                    url: Sudanese
                    logo: pixel
                  articleSection: Hawaii
                  articleBody: Dominican
                  description: Representative
                  slug: Mouse
                  url: Romania
                  isDraft: false
                  id: 6793de786404b3021093ae77
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-03T05:33:57.951Z'
                  updatedAt: '2025-09-07T12:03:12.378Z'
  /client/api/v1/blog/partial-update/{id}:
    put:
      tags:
        - client > Blog
      summary: partialupdateBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Claire Greenholt
                  image: capability
                  title: Pennsylvania
                  alternativeHeadline: Data
                  publishDate: migration
                  author:
                    name: Claude Mohr
                    image: Concrete
                    email: Tia_Collins@hotmail.com
                  publisher:
                    name: Lester Hodkiewicz
                    url: Sudanese
                    logo: pixel
                  articleSection: Hawaii
                  articleBody: Dominican
                  description: Representative
                  slug: Mouse
                  url: Romania
                  isDraft: false
                  id: 6793de786404b3021093ae78
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-03T05:33:57.951Z'
                  updatedAt: '2025-09-07T12:03:12.378Z'
  /client/api/v1/blog/softDelete/{id}:
    put:
      tags:
        - client > Blog
      summary: softDeleteBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blog/softDeleteMany:
    put:
      tags:
        - client > Blog
      summary: softDeleteManyBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blog/updateBulk:
    put:
      tags:
        - client > Blog
      summary: updateBulkBlog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blog/delete/{id}:
    delete:
      tags:
        - client > Blog
      summary: deleteBlog
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/blockstate/{id}:
    get:
      tags:
        - client > blockstate
      summary: getblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Dr. Jaime Feil
                  image: Bike
                  id: 6793de786404b3021093ae7e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T05:12:35.325Z'
                  updatedAt: '2025-11-17T14:20:00.988Z'
  /client/api/v1/blockstate/create:
    post:
      tags:
        - client > blockstate
      summary: addblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Dr. Jaime Feil
                image: Bike
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Dr. Jaime Feil
                  image: Bike
                  id: 6793de786404b3021093ae7c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T05:12:35.325Z'
                  updatedAt: '2025-11-17T14:20:00.988Z'
  /client/api/v1/blockstate/list:
    post:
      tags:
        - client > blockstate
      summary: findAllblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Dr. Jaime Feil
                      image: Bike
                      id: 6793de786404b3021093ae7d
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-15T05:12:35.325Z'
                      updatedAt: '2025-11-17T14:20:00.988Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/blockstate/count:
    post:
      tags:
        - client > blockstate
      summary: getblockstateCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/blockstate/addBulk:
    post:
      tags:
        - client > blockstate
      summary: insertBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Dr. Jaime Feil
                    image: Bike
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/deleteMany:
    post:
      tags:
        - client > blockstate
      summary: deleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/update/{id}:
    put:
      tags:
        - client > blockstate
      summary: updateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Dr. Jaime Feil
                image: Bike
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Dr. Jaime Feil
                  image: Bike
                  id: 6793de786404b3021093ae7f
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T05:12:35.325Z'
                  updatedAt: '2025-11-17T14:20:00.988Z'
  /client/api/v1/blockstate/partial-update/{id}:
    put:
      tags:
        - client > blockstate
      summary: partialupdateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Dr. Jaime Feil
                  image: Bike
                  id: 6793de786404b3021093ae80
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T05:12:35.325Z'
                  updatedAt: '2025-11-17T14:20:00.988Z'
  /client/api/v1/blockstate/softDelete/{id}:
    put:
      tags:
        - client > blockstate
      summary: softDeleteblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/softDeleteMany:
    put:
      tags:
        - client > blockstate
      summary: softDeleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/updateBulk:
    put:
      tags:
        - client > blockstate
      summary: updateBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/delete/{id}:
    delete:
      tags:
        - client > blockstate
      summary: deleteblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/item/{id}:
    get:
      tags:
        - client > item
      summary: getitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Blanca Hauck
                  image: Pines
                  description: bluetooth
                  priority: 542
                  parentId: 6793de786404b3021093ae83
                  categoryId: 6793de786404b3021093ae84
                  id: 6793de786404b3021093ae88
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T05:44:56.249Z'
                  updatedAt: '2025-11-10T20:33:14.049Z'
  /client/api/v1/item/create:
    post:
      tags:
        - client > item
      summary: additem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Blanca Hauck
                image: Pines
                description: bluetooth
                priority: 542
                parentId: 6793de786404b3021093ae83
                categoryId: 6793de786404b3021093ae84
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Blanca Hauck
                  image: Pines
                  description: bluetooth
                  priority: 542
                  parentId: 6793de786404b3021093ae83
                  categoryId: 6793de786404b3021093ae84
                  id: 6793de786404b3021093ae86
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T05:44:56.249Z'
                  updatedAt: '2025-11-10T20:33:14.049Z'
  /client/api/v1/item/list:
    post:
      tags:
        - client > item
      summary: findAllitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Blanca Hauck
                      image: Pines
                      description: bluetooth
                      priority: 542
                      parentId: 6793de786404b3021093ae83
                      categoryId: 6793de786404b3021093ae84
                      id: 6793de786404b3021093ae87
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-03-06T05:44:56.249Z'
                      updatedAt: '2025-11-10T20:33:14.049Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/item/count:
    post:
      tags:
        - client > item
      summary: getitemCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/item/addBulk:
    post:
      tags:
        - client > item
      summary: insertBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Blanca Hauck
                    image: Pines
                    description: bluetooth
                    priority: 542
                    parentId: 6793de786404b3021093ae83
                    categoryId: 6793de786404b3021093ae84
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/deleteMany:
    post:
      tags:
        - client > item
      summary: deleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/update/{id}:
    put:
      tags:
        - client > item
      summary: updateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Blanca Hauck
                image: Pines
                description: bluetooth
                priority: 542
                parentId: 6793de786404b3021093ae83
                categoryId: 6793de786404b3021093ae84
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Blanca Hauck
                  image: Pines
                  description: bluetooth
                  priority: 542
                  parentId: 6793de786404b3021093ae83
                  categoryId: 6793de786404b3021093ae84
                  id: 6793de786404b3021093ae89
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T05:44:56.249Z'
                  updatedAt: '2025-11-10T20:33:14.049Z'
  /client/api/v1/item/partial-update/{id}:
    put:
      tags:
        - client > item
      summary: partialupdateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Blanca Hauck
                  image: Pines
                  description: bluetooth
                  priority: 542
                  parentId: 6793de786404b3021093ae83
                  categoryId: 6793de786404b3021093ae84
                  id: 6793de786404b3021093ae8a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T05:44:56.249Z'
                  updatedAt: '2025-11-10T20:33:14.049Z'
  /client/api/v1/item/softDelete/{id}:
    put:
      tags:
        - client > item
      summary: softDeleteitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/softDeleteMany:
    put:
      tags:
        - client > item
      summary: softDeleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/updateBulk:
    put:
      tags:
        - client > item
      summary: updateBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/delete/{id}:
    delete:
      tags:
        - client > item
      summary: deleteitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/user/{id}:
    get:
      tags:
        - client > user
      summary: getuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  userType: 1
                  id: 6793de786404b3021093ae90
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-25T23:06:50.670Z'
                  updatedAt: '2026-01-23T07:20:40.043Z'
  /client/api/v1/user/me:
    get:
      tags:
        - client > user
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  userType: 1
                  id: 6793de786404b3021093ae96
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-25T23:06:50.670Z'
                  updatedAt: '2026-01-23T07:20:40.043Z'
  /client/api/v1/user/create:
    post:
      tags:
        - client > user
      summary: adduser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: Scott Bergstrom
                lastName: Tommy Dicki
                name: Marvin O'Conner
                username: Alaina17
                password: 8qnnrbhJEt1PH2v
                email: Russel_Kuhic@yahoo.com
                image: Wooden
                mobileNo: (380) 530-3199
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  userType: 1
                  id: 6793de786404b3021093ae8e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-25T23:06:50.670Z'
                  updatedAt: '2026-01-23T07:20:40.043Z'
  /client/api/v1/user/list:
    post:
      tags:
        - client > user
      summary: findAlluser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - firstName: Scott Bergstrom
                      lastName: Tommy Dicki
                      name: Marvin O'Conner
                      username: Alaina17
                      email: Russel_Kuhic@yahoo.com
                      image: Wooden
                      mobileNo: (380) 530-3199
                      userType: 1
                      id: 6793de786404b3021093ae8f
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-02-25T23:06:50.670Z'
                      updatedAt: '2026-01-23T07:20:40.043Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/user/count:
    post:
      tags:
        - client > user
      summary: getuserCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/user/addBulk:
    post:
      tags:
        - client > user
      summary: insertBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - firstName: Scott Bergstrom
                    lastName: Tommy Dicki
                    name: Marvin O'Conner
                    username: Alaina17
                    password: 8qnnrbhJEt1PH2v
                    email: Russel_Kuhic@yahoo.com
                    image: Wooden
                    mobileNo: (380) 530-3199
                    userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/user/deleteMany:
    post:
      tags:
        - client > user
      summary: deleteManyuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/user/update/{id}:
    put:
      tags:
        - client > user
      summary: updateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: Scott Bergstrom
                lastName: Tommy Dicki
                name: Marvin O'Conner
                username: Alaina17
                password: 8qnnrbhJEt1PH2v
                email: Russel_Kuhic@yahoo.com
                image: Wooden
                mobileNo: (380) 530-3199
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  userType: 1
                  id: 6793de786404b3021093ae91
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-25T23:06:50.670Z'
                  updatedAt: '2026-01-23T07:20:40.043Z'
  /client/api/v1/user/partial-update/{id}:
    put:
      tags:
        - client > user
      summary: partialupdateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  userType: 1
                  id: 6793de786404b3021093ae92
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-25T23:06:50.670Z'
                  updatedAt: '2026-01-23T07:20:40.043Z'
  /client/api/v1/user/softDelete/{id}:
    put:
      tags:
        - client > user
      summary: softDeleteuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/user/softDeleteMany:
    put:
      tags:
        - client > user
      summary: softDeleteManyuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/user/updateBulk:
    put:
      tags:
        - client > user
      summary: updateBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/user/update-profile:
    put:
      tags:
        - client > user
      summary: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: Scott Bergstrom
                lastName: Tommy Dicki
                name: Marvin O'Conner
                username: Alaina17
                password: 8qnnrbhJEt1PH2v
                email: Russel_Kuhic@yahoo.com
                image: Wooden
                mobileNo: (380) 530-3199
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  userType: 1
                  id: 6793de786404b3021093ae95
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-25T23:06:50.670Z'
                  updatedAt: '2026-01-23T07:20:40.043Z'
  /client/api/v1/user/delete/{id}:
    delete:
      tags:
        - client > user
      summary: deleteuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/auth/login:
    post:
      tags:
        - client > login
      summary: Login in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  id: 6793de786404b3021093ae97
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-12-18T07:02:49.489Z'
                  updatedAt: '2025-09-28T15:40:55.746Z'
  /client/auth/register:
    post:
      tags:
        - client > login
      summary: Register User in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: Scott Bergstrom
                lastName: Tommy Dicki
                name: Marvin O'Conner
                username: Alaina17
                password: 8qnnrbhJEt1PH2v
                email: Russel_Kuhic@yahoo.com
                image: Wooden
                mobileNo: (380) 530-3199
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  firstName: Scott Bergstrom
                  lastName: Tommy Dicki
                  name: Marvin O'Conner
                  username: Alaina17
                  email: Russel_Kuhic@yahoo.com
                  image: Wooden
                  mobileNo: (380) 530-3199
                  id: 6793de786404b3021093ae97
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-12-18T07:02:49.489Z'
                  updatedAt: '2025-09-28T15:40:55.746Z'
  /client/auth/forgot-password:
    post:
      tags:
        - client > login
      summary: Forgot Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: yourmail@gmail.com
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /client/auth/validate-otp:
    post:
      tags:
        - client > login
      summary: Validate OTP in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: '5898'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /client/auth/logout:
    post:
      tags:
        - client > login
      summary: Logout in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/api/v1/user/change-password:
    put:
      tags:
        - client > login
      summary: Change Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: OldPassword
                newPassword: NewPassword
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /client/auth/reset-password:
    put:
      tags:
        - client > login
      summary: Reset password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: '5898'
                newPassword: yourPassword
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
  /client/api/v1/category/{id}:
    get:
      tags:
        - client > category
      summary: getcategory
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  image: program
                  name: Erika Leffler
                  parentId: 6793de786404b3021093ae98
                  description: Avon
                  id: 6793de786404b3021093ae9c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-06T07:36:51.331Z'
                  updatedAt: '2025-11-03T23:11:34.675Z'
  /client/api/v1/category/create:
    post:
      tags:
        - client > category
      summary: addcategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                image: program
                name: Erika Leffler
                parentId: 6793de786404b3021093ae98
                description: Avon
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  image: program
                  name: Erika Leffler
                  parentId: 6793de786404b3021093ae98
                  description: Avon
                  id: 6793de786404b3021093ae9a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-06T07:36:51.331Z'
                  updatedAt: '2025-11-03T23:11:34.675Z'
  /client/api/v1/category/list:
    post:
      tags:
        - client > category
      summary: findAllcategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - image: program
                      name: Erika Leffler
                      parentId: 6793de786404b3021093ae98
                      description: Avon
                      id: 6793de786404b3021093ae9b
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-04-06T07:36:51.331Z'
                      updatedAt: '2025-11-03T23:11:34.675Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/category/count:
    post:
      tags:
        - client > category
      summary: getcategoryCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/category/addBulk:
    post:
      tags:
        - client > category
      summary: insertBulkcategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - image: program
                    name: Erika Leffler
                    parentId: 6793de786404b3021093ae98
                    description: Avon
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/category/deleteMany:
    post:
      tags:
        - client > category
      summary: deleteManycategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/category/update/{id}:
    put:
      tags:
        - client > category
      summary: updatecategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                image: program
                name: Erika Leffler
                parentId: 6793de786404b3021093ae98
                description: Avon
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  image: program
                  name: Erika Leffler
                  parentId: 6793de786404b3021093ae98
                  description: Avon
                  id: 6793de786404b3021093ae9d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-06T07:36:51.331Z'
                  updatedAt: '2025-11-03T23:11:34.675Z'
  /client/api/v1/category/partial-update/{id}:
    put:
      tags:
        - client > category
      summary: partialupdatecategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  image: program
                  name: Erika Leffler
                  parentId: 6793de786404b3021093ae98
                  description: Avon
                  id: 6793de786404b3021093ae9e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-06T07:36:51.331Z'
                  updatedAt: '2025-11-03T23:11:34.675Z'
  /client/api/v1/category/softDelete/{id}:
    put:
      tags:
        - client > category
      summary: softDeletecategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/category/softDeleteMany:
    put:
      tags:
        - client > category
      summary: softDeleteManycategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/category/updateBulk:
    put:
      tags:
        - client > category
      summary: updateBulkcategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/category/delete/{id}:
    delete:
      tags:
        - client > category
      summary: deletecategory
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/role/{id}:
    get:
      tags:
        - client > role
      summary: getrole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jackie Cormier
                  code: Crescent
                  weight: 957
                  id: 6793de786404b3021093aeac
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-26T21:30:02.634Z'
                  updatedAt: '2025-12-31T09:40:35.732Z'
  /client/api/v1/role/create:
    post:
      tags:
        - client > role
      summary: addrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Jackie Cormier
                code: Crescent
                weight: 957
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jackie Cormier
                  code: Crescent
                  weight: 957
                  id: 6793de786404b3021093aea6
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-26T21:30:02.634Z'
                  updatedAt: '2025-12-31T09:40:35.732Z'
  /client/api/v1/role/addBulk:
    post:
      tags:
        - client > role
      summary: insertBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Jackie Cormier
                    code: Crescent
                    weight: 957
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/list:
    post:
      tags:
        - client > role
      summary: findAllrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Jackie Cormier
                      code: Crescent
                      weight: 957
                      id: 6793de786404b3021093aea8
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-09-26T21:30:02.634Z'
                      updatedAt: '2025-12-31T09:40:35.732Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/role/count:
    post:
      tags:
        - client > role
      summary: getroleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/role/deleteMany:
    post:
      tags:
        - client > role
      summary: deleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/updateBulk:
    put:
      tags:
        - client > role
      summary: updateBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/softDeleteMany:
    put:
      tags:
        - client > role
      summary: softDeleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/softDelete/{id}:
    put:
      tags:
        - client > role
      summary: softDeleterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/role/partial-update/{id}:
    put:
      tags:
        - client > role
      summary: partialupdaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jackie Cormier
                  code: Crescent
                  weight: 957
                  id: 6793de786404b3021093aeaa
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-26T21:30:02.634Z'
                  updatedAt: '2025-12-31T09:40:35.732Z'
  /client/api/v1/role/update/{id}:
    put:
      tags:
        - client > role
      summary: updaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Jackie Cormier
                code: Crescent
                weight: 957
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Jackie Cormier
                  code: Crescent
                  weight: 957
                  id: 6793de786404b3021093aeab
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-09-26T21:30:02.634Z'
                  updatedAt: '2025-12-31T09:40:35.732Z'
  /client/api/v1/role/delete/{id}:
    delete:
      tags:
        - client > role
      summary: deleterole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/projectroute/{id}:
    get:
      tags:
        - client > projectRoute
      summary: getprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Implementation
                  method: Cambridgeshire
                  uri: Refined
                  id: 6793de786404b3021093aeb4
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T13:09:00.428Z'
                  updatedAt: '2025-04-05T06:22:17.300Z'
  /client/api/v1/projectroute/create:
    post:
      tags:
        - client > projectRoute
      summary: addprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: Implementation
                method: Cambridgeshire
                uri: Refined
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Implementation
                  method: Cambridgeshire
                  uri: Refined
                  id: 6793de786404b3021093aeae
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T13:09:00.428Z'
                  updatedAt: '2025-04-05T06:22:17.300Z'
  /client/api/v1/projectroute/addBulk:
    post:
      tags:
        - client > projectRoute
      summary: insertBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - route_name: Implementation
                    method: Cambridgeshire
                    uri: Refined
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/list:
    post:
      tags:
        - client > projectRoute
      summary: findAllprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - route_name: Implementation
                      method: Cambridgeshire
                      uri: Refined
                      id: 6793de786404b3021093aeb0
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-15T13:09:00.428Z'
                      updatedAt: '2025-04-05T06:22:17.300Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/projectroute/count:
    post:
      tags:
        - client > projectRoute
      summary: getprojectRouteCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/projectroute/deleteMany:
    post:
      tags:
        - client > projectRoute
      summary: deleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/updateBulk:
    put:
      tags:
        - client > projectRoute
      summary: updateBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/softDeleteMany:
    put:
      tags:
        - client > projectRoute
      summary: softDeleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/softDelete/{id}:
    put:
      tags:
        - client > projectRoute
      summary: softDeleteprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/projectroute/partial-update/{id}:
    put:
      tags:
        - client > projectRoute
      summary: partialupdateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Implementation
                  method: Cambridgeshire
                  uri: Refined
                  id: 6793de786404b3021093aeb2
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T13:09:00.428Z'
                  updatedAt: '2025-04-05T06:22:17.300Z'
  /client/api/v1/projectroute/update/{id}:
    put:
      tags:
        - client > projectRoute
      summary: updateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: Implementation
                method: Cambridgeshire
                uri: Refined
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Implementation
                  method: Cambridgeshire
                  uri: Refined
                  id: 6793de786404b3021093aeb3
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-15T13:09:00.428Z'
                  updatedAt: '2025-04-05T06:22:17.300Z'
  /client/api/v1/projectroute/delete/{id}:
    delete:
      tags:
        - client > projectRoute
      summary: deleteprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/routerole/{id}:
    get:
      tags:
        - client > routeRole
      summary: getrouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6793de786404b3021093aeb5
                  roleId: 6793de786404b3021093aeb6
                  id: 6793de786404b3021093aebe
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-10T20:01:07.800Z'
                  updatedAt: '2025-06-15T16:44:57.433Z'
  /client/api/v1/routerole/create:
    post:
      tags:
        - client > routeRole
      summary: addrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 6793de786404b3021093aeb5
                roleId: 6793de786404b3021093aeb6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6793de786404b3021093aeb5
                  roleId: 6793de786404b3021093aeb6
                  id: 6793de786404b3021093aeb8
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-10T20:01:07.800Z'
                  updatedAt: '2025-06-15T16:44:57.433Z'
  /client/api/v1/routerole/addBulk:
    post:
      tags:
        - client > routeRole
      summary: insertBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - routeId: 6793de786404b3021093aeb5
                    roleId: 6793de786404b3021093aeb6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/list:
    post:
      tags:
        - client > routeRole
      summary: findAllrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - routeId: 6793de786404b3021093aeb5
                      roleId: 6793de786404b3021093aeb6
                      id: 6793de786404b3021093aeba
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-04-10T20:01:07.800Z'
                      updatedAt: '2025-06-15T16:44:57.433Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/routerole/count:
    post:
      tags:
        - client > routeRole
      summary: getrouteRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/routerole/deleteMany:
    post:
      tags:
        - client > routeRole
      summary: deleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/updateBulk:
    put:
      tags:
        - client > routeRole
      summary: updateBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/softDeleteMany:
    put:
      tags:
        - client > routeRole
      summary: softDeleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/softDelete/{id}:
    put:
      tags:
        - client > routeRole
      summary: softDeleterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/routerole/partial-update/{id}:
    put:
      tags:
        - client > routeRole
      summary: partialupdaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6793de786404b3021093aeb5
                  roleId: 6793de786404b3021093aeb6
                  id: 6793de786404b3021093aebc
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-10T20:01:07.800Z'
                  updatedAt: '2025-06-15T16:44:57.433Z'
  /client/api/v1/routerole/update/{id}:
    put:
      tags:
        - client > routeRole
      summary: updaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 6793de786404b3021093aeb5
                roleId: 6793de786404b3021093aeb6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 6793de786404b3021093aeb5
                  roleId: 6793de786404b3021093aeb6
                  id: 6793de786404b3021093aebd
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-10T20:01:07.800Z'
                  updatedAt: '2025-06-15T16:44:57.433Z'
  /client/api/v1/routerole/delete/{id}:
    delete:
      tags:
        - client > routeRole
      summary: deleterouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/userrole/{id}:
    get:
      tags:
        - client > userRole
      summary: getuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6793de786404b3021093aebf
                  roleId: 6793de786404b3021093aec0
                  id: 6793de786404b3021093aec8
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-14T18:38:10.952Z'
                  updatedAt: '2025-09-04T04:53:22.655Z'
  /client/api/v1/userrole/create:
    post:
      tags:
        - client > userRole
      summary: adduserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 6793de786404b3021093aebf
                roleId: 6793de786404b3021093aec0
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6793de786404b3021093aebf
                  roleId: 6793de786404b3021093aec0
                  id: 6793de786404b3021093aec2
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-14T18:38:10.952Z'
                  updatedAt: '2025-09-04T04:53:22.655Z'
  /client/api/v1/userrole/addBulk:
    post:
      tags:
        - client > userRole
      summary: insertBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - userId: 6793de786404b3021093aebf
                    roleId: 6793de786404b3021093aec0
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/list:
    post:
      tags:
        - client > userRole
      summary: findAlluserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - userId: 6793de786404b3021093aebf
                      roleId: 6793de786404b3021093aec0
                      id: 6793de786404b3021093aec4
                      isDeleted: false
                      isActive: true
                      createdAt: '2026-01-14T18:38:10.952Z'
                      updatedAt: '2025-09-04T04:53:22.655Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/userrole/count:
    post:
      tags:
        - client > userRole
      summary: getuserRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/userrole/deleteMany:
    post:
      tags:
        - client > userRole
      summary: deleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/updateBulk:
    put:
      tags:
        - client > userRole
      summary: updateBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/softDeleteMany:
    put:
      tags:
        - client > userRole
      summary: softDeleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/softDelete/{id}:
    put:
      tags:
        - client > userRole
      summary: softDeleteuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/userrole/partial-update/{id}:
    put:
      tags:
        - client > userRole
      summary: partialupdateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6793de786404b3021093aebf
                  roleId: 6793de786404b3021093aec0
                  id: 6793de786404b3021093aec6
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-14T18:38:10.952Z'
                  updatedAt: '2025-09-04T04:53:22.655Z'
  /client/api/v1/userrole/update/{id}:
    put:
      tags:
        - client > userRole
      summary: updateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 6793de786404b3021093aebf
                roleId: 6793de786404b3021093aec0
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 6793de786404b3021093aebf
                  roleId: 6793de786404b3021093aec0
                  id: 6793de786404b3021093aec7
                  isDeleted: false
                  isActive: true
                  createdAt: '2026-01-14T18:38:10.952Z'
                  updatedAt: '2025-09-04T04:53:22.655Z'
  /client/api/v1/userrole/delete/{id}:
    delete:
      tags:
        - client > userRole
      summary: deleteuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
